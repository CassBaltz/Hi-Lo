{"version":3,"sources":["redux/reducers/helpers/drawCard.js","redux/reducers/helpers/loadDeck.js","redux/constants.js","redux/reducers/helpers/passTurn.js","redux/reducers/helpers/resetGame.js","redux/reducers/helpers/resetDeck.js","redux/reducers/helpers/guess.js","redux/reducers/helpers/postGuess.js","redux/reducers/helpers/updateName.js","redux/actions/deck.js","redux/actions/game.js","redux/store.js","redux/reducers/index.js","components/PlayerField.js","components/Player.js","components/DiscardPile.js","components/Table.js","components/Game.js","components/Instructions.js","components/Scoreboard.js","components/Main.js","App.js","index.js"],"names":["state","deck","newCards","cards","drawnCard","pop","newCardsShowing","cardsShowing","push","deckId","topCard","resettingDeck","SWITCH_PLAYER","DEFAULT_STATE","game","name","score","player","correctGuesses","direction","isCorrect","guessedCard","CARD_VALUES","2","3","4","5","6","7","8","9","10","JACK","QUEEN","KING","ACE","turn","cardShowing","length","topCardInDeck","cardShowingValue","value","topCardInDeckValue","isCorrectGuess","currentGuess","currentGuessDefault","updatedState","drawCard","numberOfCardsShowing","nextCard","loseTurnAfterGuess","payload","key","loadDeck","type","guess","dispatch","window","setTimeout","updateName","createStore","action","resetDeck","resetGame","passTurn","postGuess","applyMiddleware","thunkMiddleware","EditIcon","classes","className","editIcon","xmlns","height","viewBox","width","d","fill","connect","ownProps","playerKey","withStyles","editNameField","padding","staticName","color","fontSize","fontWeight","cursor","marginLeft","useState","isEditing","setIsEditing","inputRef","useRef","ref","defaultValue","onBlur","e","target","onKeyPress","which","onClick","current","focus","isPlaying","root","display","position","flexDirection","props","rotateAvatar","alignItems","avatarContainer","borderRadius","transform","backgroundColor","transition","head","zIndex","margin","body","top","nose","background","leftEar","left","rightEar","right","sunglasses","rightTemple","leftTemple","playerInfo","minHeight","bottom","BlankCard","offSet","blankCard","style","TopCard","card","src","image","alt","code","border","boxSizing","count","textAlign","lastIndex","discardPile","map","index","CurrentGuess","currentGuessCard","currentGuessPlaceholder","colorButtonFromProps","buttonDirection","sharedButtonStyles","boxShadow","justifyContent","outline","currentGuessShared","styles","inlineItems","cardDeck","higherButton","lowerButton","passTurnButton","opacity","cardsRemainingInDeck","canPassTurn","enableButtons","disabled","Modal","setAppElement","closeButtonWrapper","content","button","setShowInstructions","overlay","isOpen","DownArrow","arrow","UpArrow","GAME_STATUSES","playerWrapper","divider","playerOne","getStatusColor","playerTwo","gameStatus","getGameStatus","thisPlayerScore","opponentScore","header","instructions","newGame","showInstructions","Fragment","axios","get","getShuffleDeckUrl","then","getDrawnCardsFromShuffledDeckUrl","data","deck_id","startNewGame","store","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.182bde5f.chunk.js","sourcesContent":["export default state => {\n  const { deck } = state;\n  const newCards = [...deck.cards];\n  const drawnCard = newCards.pop();\n  const newCardsShowing = [...deck.cardsShowing];\n  newCardsShowing.push(drawnCard);\n\n  return {\n    ...state,\n    deck: {\n      ...deck,\n      cards: newCards,\n      cardsShowing: newCardsShowing,\n    },\n  };\n};","export default (state, { cards, deckId }) => {\n  const topCard = cards.pop();\n  return {\n    ...state,\n    deck: {\n      ...state.deck,\n      cards,\n      deckId,\n      cardsShowing: [topCard],\n      resettingDeck: false\n    }\n  };\n};","export const PLAYER_ONE = 'PLAYER_ONE';\nexport const PLAYER_TWO = 'PLAYER_TWO';\n\nexport const SWITCH_PLAYER = {\n  [PLAYER_ONE]: PLAYER_TWO,\n  [PLAYER_TWO]: PLAYER_ONE,\n};\n\nexport const DEFAULT_STATE = {\n  deck: {\n    cards: [],\n    cardsShowing: [],\n    deckId: null,\n    resettingDeck: false,\n  },\n  game: {\n    [PLAYER_ONE]: {\n      name: \"Player 1\",\n      score: 0,\n    },\n    [PLAYER_TWO]: {\n      name: \"Player 2\",\n      score: 0,\n    },\n    turn: {\n      player: PLAYER_ONE,\n      correctGuesses: 0,\n    },\n    currentGuess: {\n      direction: null,\n      isCorrect: false,\n      guessedCard: null,\n    },\n    winner: null,\n  },\n};\n\nexport const CARD_VALUES = {\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  10: 10,\n  JACK: 11,\n  QUEEN: 12,\n  KING: 13,\n  ACE: 14,\n};\n\nexport const LOWER = \"LOWER\";\nexport const HIGHER = \"HIGHER\";\nexport const CORRECT_GUESSES_TIL_PASS = 3;","import { SWITCH_PLAYER } from '../../constants';\n\nexport default state => {\n  return {\n    ...state,\n    game: {\n      ...state.game,\n      turn: {\n        ...state.game.turn,\n        player: SWITCH_PLAYER[state.game.turn.player],\n        correctGuesses: 0,\n      },\n    }\n  };\n};","import { PLAYER_ONE, PLAYER_TWO, DEFAULT_STATE } from '../../constants';\n\nexport default state => ({\n  ...state,\n  game: {\n    ...DEFAULT_STATE.game,\n    [PLAYER_ONE]: {\n      ...DEFAULT_STATE.game[PLAYER_ONE],\n      name: state.game[PLAYER_ONE].name,\n    },\n    [PLAYER_TWO]: {\n      ...DEFAULT_STATE.game[PLAYER_TWO],\n      name: state.game[PLAYER_TWO].name,\n    },\n  },\n  deck: { ...state.deck, resettingDeck: true }\n});","export default state => ({\n  ...state,\n  deck: { ...state.deck, resettingDeck: true }\n});","import { CARD_VALUES, LOWER, } from \"../../constants\";\n\nexport const isCorrectGuess = (deck, direction) => {\n  const cardShowing = deck.cardsShowing[deck.cardsShowing.length - 1];\n  const topCardInDeck = deck.cards[deck.cards.length - 1];\n\n  const cardShowingValue = CARD_VALUES[cardShowing.value];\n  const topCardInDeckValue = CARD_VALUES[topCardInDeck.value];\n\n  if (direction === LOWER) {\n    return topCardInDeckValue < cardShowingValue;\n  }\n\n  return topCardInDeckValue > cardShowingValue;\n};\n\nexport default (state, direction) => {\n  const { game, deck, } = state;\n  const isCorrect = isCorrectGuess(deck, direction);\n  const guessedCard = deck.cards[deck.cards.length - 1];\n\n  return {\n    ...state,\n    game: {\n      ...game,\n      currentGuess: {\n        direction,\n        isCorrect,\n        guessedCard,\n      },\n    },\n  };\n};\n","import { SWITCH_PLAYER, DEFAULT_STATE, } from \"../../constants\";\nimport drawCard from \"./drawCard\";\n\nconst currentGuessDefault = DEFAULT_STATE.game.currentGuess;\n\nexport const loseTurnAfterGuess = ({ game, deck, }) => {\n  const player = game.turn.player;\n  const numberOfCardsShowing = deck.cardsShowing.length;\n  const newCards = [...deck.cards];\n  const nextCard = newCards.pop();\n\n  return {\n    game: {\n      ...game,\n      [player]: {\n        ...game[player],\n        score: game[player].score + numberOfCardsShowing,\n      },\n      turn: {\n        ...game.turn,\n        player: SWITCH_PLAYER[player],\n        correctGuesses: 0,\n      },\n      currentGuess: currentGuessDefault,\n    },\n    deck: {\n      ...deck,\n      cardsShowing: [nextCard],\n      cards: newCards,\n    },\n  };\n};\n\nexport default (state) => {\n  const { game, deck, } = state;\n\n  const guessWasCorrect = game.currentGuess.isCorrect;\n\n  if (guessWasCorrect) {\n    const updatedState = drawCard(state);\n    return {\n      ...updatedState,\n      game: {\n        ...updatedState.game,\n        turn: {\n          ...updatedState.game.turn,\n          correctGuesses: updatedState.game.turn.correctGuesses + 1,\n        },\n        currentGuess: currentGuessDefault,\n      },\n    };\n  }\n\n  return loseTurnAfterGuess({ game, deck, });\n};","export default (state, payload) => ({\n  ...state,\n  game: {\n    ...state.game,\n    [payload.key]: {\n      ...state.game[payload.key],\n      name: payload.value,\n    },\n  },\n});","import axios from 'axios';\n\nexport const NEW_DECK_URL = 'https://deckofcardsapi.com/api/deck/new/draw/?count=52';\nexport const getShuffleDeckUrl = deckId => `https://deckofcardsapi.com/api/deck/${deckId}/shuffle/`;\nexport const getDrawnCardsFromShuffledDeckUrl = deckId => `https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=52`;\n\nexport const RESET_DECK = 'RESET_DECK';\nexport const resetDeck = () => ({\n  type: RESET_DECK,\n});\n\nexport const RESET_GAME = 'RESET_GAME';\nexport const resetGame = () => ({\n  type: RESET_GAME,\n});\n\nexport const LOAD_DECK = 'LOAD_DECK';\nexport const loadDeck = ({ cards, deckId }) => ({\n  type: LOAD_DECK,\n  payload: {\n    cards,\n    deckId\n  }\n});\n\nexport const getNewDeck = () => dispatch => {\n  dispatch(resetDeck());\n\n  axios.get(NEW_DECK_URL).then(({ data }) => {\n    const { cards, deck_id } = data;\n    dispatch(loadDeck({ cards, deckId: deck_id }));\n  });\n};\n\nexport const startNewGame = deckId => dispatch => {\n  dispatch(resetGame());\n\n  axios.get(getShuffleDeckUrl(deckId)).then(() => {\n    axios.get(getDrawnCardsFromShuffledDeckUrl(deckId)).then(({ data }) => {\n      const { cards, deck_id } = data;\n      dispatch(loadDeck({ cards, deckId: deck_id, }));\n    });\n  });\n};\n\nexport const DRAW_CARD = 'DRAW_CARD';\nexport const drawCard = () => ({\n  type: DRAW_CARD,\n});\n\n","export const PASS_TURN = 'PASS_TURN';\nexport const passTurn = () => ({\n  type: PASS_TURN,\n});\n\nexport const GUESS = \"GUESS\";\nexport const POST_GUESS = \"POST_GUESS\";\nexport const guess = direction => dispatch => {\n  dispatch({\n    type: GUESS,\n    payload: direction,\n  });\n\n  window.setTimeout(() => {\n    dispatch({\n      type: POST_GUESS,\n    })\n  }, 1500);\n};\n\nexport const UPDATE_NAME = \"UPDATE_NAME\";\nexport const updateName = payload => ({\n  type: UPDATE_NAME,\n  payload,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","import {\n  loadDeck,\n  drawCard,\n  passTurn,\n  guess,\n  resetGame,\n  resetDeck,\n  postGuess,\n  updateName,\n} from './helpers';\nimport { DEFAULT_STATE } from '../constants';\nimport { RESET_GAME, LOAD_DECK, DRAW_CARD, RESET_DECK, } from \"../actions/deck\";\nimport { PASS_TURN, GUESS, POST_GUESS, UPDATE_NAME, } from \"../actions/game\";\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case RESET_DECK:\n      return resetDeck(state);\n    case RESET_GAME:\n      return resetGame(state);\n    case LOAD_DECK:\n      return loadDeck(state, action.payload);\n    case DRAW_CARD:\n      return drawCard(state, action.payload);\n    case PASS_TURN:\n      return passTurn(state);\n    case GUESS:\n      return guess(state, action.payload);\n    case POST_GUESS:\n      return postGuess(state);\n    case UPDATE_NAME:\n      return updateName(state, action.payload);\n    default:\n      return state;\n  }\n};","import React, { useState, useRef } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from \"react-redux\";\n\nimport { updateName } from \"../redux/actions/game\";\n\nconst ENTER_KEY = 13;\n\nconst EditIcon = ({ classes }) => (\n  <svg\n    className={classes.editIcon}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n  >\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n\nexport const PlayerField = ({ dispatch, classes, playerKey, name, }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef(null);\n\n  const handleBlur = e => {\n    if (!e.target.value) {\n      return setIsEditing(true);\n    }\n\n    setIsEditing(false);\n    dispatch(updateName({ key: playerKey, value: e.target.value }));\n  };\n\n  const handleKeyPress = e => {\n    if (e.which === ENTER_KEY && e.target.value) {\n      setIsEditing(false);\n      dispatch(updateName({ key: playerKey, value: e.target.value }));\n    }\n  };\n\n  const startEditing = () => {\n    setIsEditing(true);\n    setTimeout(() => {\n      inputRef && inputRef.current && inputRef.current.focus();\n    });\n  };\n\n  if (isEditing) {\n    return (\n      <input\n        ref={inputRef}\n        className={classes.editNameField}\n        defaultValue={name}\n        type=\"text\"\n        onBlur={handleBlur}\n        onKeyPress={handleKeyPress}\n      />\n    )\n  }\n\n  return <em className={classes.staticName} onClick={startEditing}>{name}<span><EditIcon classes={classes} /></span></em>\n};\n\nconst styles = {\n  editNameField: {\n    padding: \"5px\",\n  },\n  staticName: {\n    color: \"#ae3ec9\",\n    fontSize: \"24px\",\n    fontWeight: \"700\",\n    cursor: \"pointer\",\n  },\n  editIcon: {\n    fill: \"#e599f7\",\n    height: \"14px\",\n    marginLeft: \"10px\",\n  },\n};\n\nexport const mapStateToProps = (state, ownProps) => ({\n  name: state.game[ownProps.playerKey].name,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(PlayerField));","import React from \"react\";\nimport { withStyles } from \"@material-ui//styles\";\nimport { connect } from \"react-redux\";\n\nimport PlayerField from \"./PlayerField\";\n\nexport const GAME_STATUSES = {\n  TIED: \"TIED\",\n  WINNING: \"WINNING\",\n  LOSING: \"LOSING\",\n};\n\n\nexport const Player = ({ classes, playerKey, }) => {\n  return (\n    <div className={classes.root}>\n      <div className={classes.avatarContainer}>\n        <div className={classes.head}></div>\n        <div className={classes.body}></div>\n        <div className={classes.nose}></div>\n        <div className={classes.leftEar}></div>\n        <div className={classes.rightEar}></div>\n        <div className={classes.sunglasses}></div>\n        <div className={classes.leftTemple}></div>\n        <div className={classes.rightTemple}></div>\n      </div>\n      <div className={classes.playerInfo}>\n        <PlayerField playerKey={playerKey} />\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    flexDirection: props => (props.rotateAvatar ? \"column\" : \"column-reverse\"),\n    alignItems: \"center\"\n  },\n  avatarContainer: {\n    position: \"relative\",\n    width: \"250px\",\n    height: \"115px\",\n    borderRadius: \"30px\",\n    transform: props => props.rotateAvatar && \"rotate(180deg)\",\n    backgroundColor: props => props.isPlaying && \"#fcc419\",\n    transition: \"background-color 1s\",\n  },\n  head: {\n    width: \"105px\",\n    height: \"105px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"#ffc9c9\",\n    position: \"relative\",\n    zIndex: \"1\",\n    margin: \"auto\"\n  },\n  body: {\n    width: \"200px\",\n    height: \"75px\",\n    borderRadius: \"45px\",\n    backgroundColor: \"#a5d8ff\",\n    position: \"relative\",\n    margin: \"auto\",\n    top: \"-85px\"\n  },\n  nose: {\n    width: \"30px\",\n    height: \"30px\",\n    background: \"#ffc9c9\",\n    borderRadius: \"50%\",\n    margin: \"auto\",\n    position: \"relative\",\n    top: \"-93px\"\n  },\n  leftEar: {\n    width: \"20px\",\n    height: \"20px\",\n    background: \"#ffc9c9\",\n    borderRadius: \"50%\",\n    margin: \"auto\",\n    position: \"relative\",\n    left: \"51px\",\n    top: \"-162px\"\n  },\n  rightEar: {\n    width: \"20px\",\n    height: \"20px\",\n    background: \"#ffc9c9\",\n    borderRadius: \"50%\",\n    margin: \"auto\",\n    position: \"relative\",\n    right: \"51px\",\n    top: \"-182px\"\n  },\n  sunglasses: {\n    width: \"123px\",\n    height: \"6px\",\n    background: \"#343a40\",\n    borderRadius: \"5px\",\n    margin: \"auto\",\n    position: \"relative\",\n    top: \"-157px\",\n    zIndex: \"1\"\n  },\n  rightTemple: {\n    width: \"4px\",\n    height: \"50px\",\n    background: \"#343a40\",\n    borderRadius: \"5px\",\n    margin: \"auto\",\n    position: \"relative\",\n    top: \"-260px\",\n    right: \"51px\",\n    zIndex: \"1\",\n  },\n  leftTemple: {\n    width: \"4px\",\n    height: \"50px\",\n    background: \"#343a40\",\n    borderRadius: \"5px\",\n    margin: \"auto\",\n    position: \"relative\",\n    top: \"-210px\",\n    left: \"51px\",\n    zIndex: \"1\",\n  },\n  playerInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minHeight: \"40px\",\n    position: \"relative\",\n    top: props => props.rotateAvatar ? \"unset\" : \"75px\",\n    bottom: props => props.rotateAvatar ? \"75px\" : \"unset\",\n    right: props => props.rotateAvatar ? \"unset\" : \"205px\",\n    left: props => props.rotateAvatar ? \"205px\" : \"unset\",\n  },\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  isPlaying: state.game.turn.player === ownProps.playerKey,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Player));","import React from \"react\";\nimport { withStyles } from \"@material-ui//styles\";\n\nconst BlankCard = ({ classes, offSet, zIndex, }) => (\n  <div\n    className={classes.blankCard}\n    style={{ bottom: offSet, right: offSet, zIndex, }}\n  ></div>\n);\n\nconst TopCard = ({ card, classes, offSet, zIndex }) => (\n  <img\n    className={classes.topCard}\n    src={card.image}\n    alt={card.code}\n    style={{ bottom: offSet, right: offSet, zIndex, }}\n  />\n);\n\nexport const DiscardPile = ({ cardsShowing, classes }) => {\n  const lastIndex = cardsShowing.length - 1;\n\n  const discardPile = cardsShowing.map((card, index) => {\n    const offSet = index * 3;\n    if (index === lastIndex) {\n      return (\n        <TopCard\n          key={card.code}\n          card={card}\n          classes={classes}\n          offSet={offSet}\n          zIndex={index}\n        />\n      );\n    }\n\n    return (\n      <BlankCard\n        key={card.code}\n        offSet={offSet}\n        classes={classes}\n        zIndex={index}\n      />\n    );\n  }\n  );\n\n  return (\n    <div className={classes.root}>\n      {discardPile}\n      <p className={classes.count}>{discardPile.length}</p>\n    </div>\n  );\n};\n\nconst styles = {\n  root: {\n    position: \"relative\",\n    width: \"70px\",\n    height: \"98px\",\n    left: \"100px\",\n  },\n  topCard: {\n    width: \"70px\",\n    height: \"98px\",\n    position: \"absolute\",\n  },\n  blankCard: {\n    width: \"70px\",\n    height: \"98px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ced4da\",\n    boxSizing: \"border-box\",\n    position: \"absolute\",\n  },\n  count: {\n    position: \"absolute\",\n    fontSize: \"18px\",\n    fontWeight: 700,\n    bottom: \"-45px\",\n    textAlign: \"center\",\n    width: \"70px\",\n    color: \"#495057\",\n  },\n};\n\nexport default withStyles(styles)(DiscardPile);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui//styles\";\nimport { connect } from \"react-redux\";\nimport { guess, passTurn } from '../redux/actions/game';\nimport { LOWER, HIGHER, CORRECT_GUESSES_TIL_PASS } from '../redux/constants';\n\nimport DiscardPile from \"./DiscardPile\";\n\nconst CurrentGuess = ({ classes, card, }) => {\n  if (card) {\n    return (\n      <img\n        className={classes.currentGuessCard}\n        src={card.image}\n        alt={card.code}\n      />\n    );\n  }\n\n  return (\n    <div className={classes.currentGuessPlaceholder}></div>\n  );\n}\n\nexport const Table = ({\n  classes,\n  dispatch,\n  cardsShowing,\n  correctGuesses,\n  cardsRemainingInDeck,\n  currentGuess,\n  resettingDeck,\n}) => {\n  const canPassTurn = correctGuesses >= CORRECT_GUESSES_TIL_PASS;\n  const { guessedCard } = currentGuess;\n  // disable all actions when we are in the\n  // 'guessing' state\n  const enableButtons = !guessedCard;\n\n  return (\n    <div className={classes.root}>\n      <button\n        className={classes.higherButton}\n        onClick={() => enableButtons && dispatch(guess(HIGHER))}\n      >\n        HIGHER\n      </button>\n      <div className={classes.inlineItems}>\n        <div className={classes.cardDeck}>{!resettingDeck && cardsRemainingInDeck}</div>\n        <CurrentGuess card={guessedCard} classes={classes} />\n        <DiscardPile cardsShowing={cardsShowing} />\n        <button\n          className={classes.passTurnButton}\n          disabled={!canPassTurn}\n          onClick={() => enableButtons && canPassTurn && dispatch(passTurn())}\n        >\n          PASS TURN\n        </button>\n      </div>\n      <button\n        className={classes.lowerButton}\n        onClick={() => enableButtons && dispatch(guess(LOWER))}\n      >\n        LOWER\n      </button>\n    </div>\n  );\n};\n\nconst colorButtonFromProps = (props, buttonDirection) => {\n  const { isCorrect, direction } = props.currentGuess;\n  if (direction === buttonDirection) {\n    return isCorrect ? \"#63e6be\" : \"#ffa8a8\";\n  }\n\n  return sharedButtonStyles.backgroundColor;\n};\n\nconst sharedButtonStyles = {\n  display: \"flex\",\n  width: \"70px\",\n  padding: \"10px\",\n  backgroundColor: \"#c5f6fa\",\n  color: \"#343a40\",\n  position: \"absolute\",\n  boxShadow: \"unset\",\n  border: \"unset\",\n  justifyContent: \"center\",\n  \"&:focus\": {\n    outline: \"none\"\n  },\n  \"&:hover\": {\n    backgroundColor: \"#e3fafc\"\n  },\n  cursor: \"pointer\",\n  transition: \"background-color .5s\",\n  borderRadius: \"4px\",\n};\n\nconst currentGuessShared = {\n  width: \"70px\",\n  height: \"98px\",\n  position: \"relative\",\n  left: \"60px\",\n};\n\nconst styles = {\n  root: {\n    backgroundColor: \"#fff4e6\",\n    border: \"8px solid #fd7e14\",\n    width: \"500px\",\n    height: \"325px\",\n    borderRadius: \"20px\",\n    margin: \"10px auto\",\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  inlineItems: {\n    position: \"relative\",\n    margin: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  cardDeck: {\n    width: \"70px\",\n    height: \"98px\",\n    backgroundColor: props => props.resettingDeck ? \"#f1f3f5\" : \"#ff6b6b\",\n    borderRadius: \"4px\",\n    border: \"2px solid #FFF\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"#FFF\",\n    fontWeight: \"700\",\n    fontSize: \"30px\",\n    position: \"relative\",\n    left: \"20px\"\n  },\n  higherButton: {\n    ...sharedButtonStyles,\n    left: \"20px\",\n    top: \"20px\",\n    backgroundColor: props => colorButtonFromProps(props, HIGHER),\n    \"&:hover\": {\n      backgroundColor: props => colorButtonFromProps(props, HIGHER),\n    },\n  },\n  lowerButton: {\n    ...sharedButtonStyles,\n    left: \"20px\",\n    bottom: \"20px\",\n    backgroundColor: props => colorButtonFromProps(props, LOWER),\n    \"&:hover\": {\n      backgroundColor: props => colorButtonFromProps(props, LOWER),\n    },\n  },\n  passTurnButton: {\n    ...sharedButtonStyles,\n    \"&:disabled\": {\n      backgroundColor: \"#e3fafc\",\n      opacity: \".5 !important\",\n      cursor: \"not-allowed\",\n    },\n    position: \"relative\",\n    left: \"120px\",\n  },\n  currentGuessCard: {\n    ...currentGuessShared,\n  },\n  currentGuessPlaceholder: {\n    ...currentGuessShared,\n    background: \"transparent\",\n    boxSizing: \"border-box\",\n    border: \"1px solid #ced4da\",\n    borderRadius: \"3px\",\n  },\n};\n\nexport const mapStateToProps = ({ game, deck }) => ({\n  resettingDeck: deck.resettingDeck,\n  cardsShowing: deck.cardsShowing,\n  cardsRemainingInDeck: deck.cards.length,\n  correctGuesses: game.turn.correctGuesses,\n  currentGuess: game.currentGuess,\n\n});\n\nexport default connect(mapStateToProps, null)(\n  withStyles(styles)(Table)\n);\n\n\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\n\nimport Player from './Player';\nimport Table from './Table';\nimport { PLAYER_ONE, PLAYER_TWO, } from '../redux/constants';\n\nexport const Game = ({ classes, }) => {\n  return (\n    <div className={classes.root}>\n      <Player playerKey={PLAYER_ONE} />\n      <Table />\n      <Player playerKey={PLAYER_TWO} rotateAvatar={true} />\n    </div>\n  );\n};\n\nconst styles = {\n  root: {\n  },\n};\n\nexport default withStyles(styles)(Game);","import React from 'react';\nimport Modal from 'react-modal';\nimport { withStyles } from '@material-ui//styles';\n\nModal.setAppElement('#root');\n\nexport const Instructions = ({ classes, setShowInstructions }) => {\n  return (\n    <Modal style={{ overlay: { zIndex: \"53\", }, }} isOpen={true}>\n      <div className={classes.root}>\n        <div className={classes.closeButtonWrapper}>\n          <button\n            className={classes.button}\n            onClick={() => setShowInstructions(false)}\n          >\n            CLOSE\n        </button>\n        </div>\n        <div className={classes.content}>\n          <h1>Hi-Lo Game</h1>\n          <h4>\n            Welcome to the Hi-Lo game where your goal\n            is to predict whether the value of the card\n            on the top of the deck will be higher or lower\n            than the face up card.\n          </h4>\n\n          <h4>\n            You can predict during your turn whether the card at the top\n            of the deck is higher or lower by clicking the 'HIGHER' and\n            'LOWER' buttons.\n          </h4>\n\n          <h4>\n            If your guess is correct then you will see it indicated by the\n            color of the button you pressed (green is correct and red is incorrect).\n          </h4>\n\n          <h4>\n            If your guess is correct then your turn continues. If it is incorrect\n            then you are given as many points as there are cards in the discard\n            pile. The discard pile will then reset.\n          </h4>\n\n          <h4><em>The goal is to have fewer points at the end of the game than your opponent.</em></h4>\n\n          <h4>\n            After three correct guesses, you will then have the option to pass the\n            turn to your opponent by pressing the active 'PASS TURN' button.\n          </h4>\n\n          <h4>\n            This pattern will continue until the game is won.\n          </h4>\n\n          <h2>Notes</h2>\n          <ul>\n            <li>Turns are indicated by the arrow on the scoreboard and the light above the player avatar.</li>\n            <li>You can edit your player's name by clicking on it.</li>\n            <li>Clicking the 'NEW GAME' button will shuffle the deck and start a new game.</li>\n            <li>Colors on the scoreboard indicate which player is winning.</li>\n          </ul>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nconst styles = {\n  root: {\n    color: \"#343a40\",\n  },\n  closeButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    padding: \"0 65px 65px 65px\",\n    \"& h1\": {\n      textAlign: \"center\",\n    }\n  },\n  button: {\n    boxShadow: \"unset\",\n    backgroundColor: \"#ffe8cc\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    padding: \"10px\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default withStyles(styles)(Instructions);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { PLAYER_ONE, PLAYER_TWO, SWITCH_PLAYER, } from \"../redux/constants\";\n\nconst DownArrow = ({ classes }) => (\n  <svg\n    className={classes.arrow}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n  >\n    <path d=\"M7 10l5 5 5-5z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n\nconst UpArrow = ({ classes }) => (\n  <svg\n    className={classes.arrow}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n  >\n    <path d=\"M7 14l5-5 5 5z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n\nconst GAME_STATUSES = {\n  TIED: \"TIED\",\n  WINNING: \"WINNING\",\n  LOSING: \"LOSING\",\n};\n\nconst Scoreboard = ({ classes, playerOne, playerTwo, }) => {\n  return (\n    <div className={classes.root}>\n      <div className={`${classes.playerWrapper} ${classes.playerOne}`}>\n        <p>{playerOne.name}</p>\n        <p>{playerOne.score}</p>\n      </div>\n      <div className={classes.divider}>{playerOne.isPlaying ? <UpArrow classes={classes} /> : <DownArrow classes={classes} />}</div>\n      <div className={`${classes.playerWrapper} ${classes.playerTwo}`}>\n        <p>{playerTwo.name}</p>\n        <p>{playerTwo.score}</p>\n      </div>\n    </div>\n  )\n};\n\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    border: \"2px solid #adb5bd\",\n    borderRadius: \"3px\",\n    backgroundColor: \"#FFF\",\n  },\n  playerWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    \"& p\": {\n      margin: 0,\n    },\n    \"& p:last-child\": {\n      marginLeft: \"20px\",\n    },\n    padding: \"10px\",\n  },\n  divider: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  arrow: {\n    fill: \"#adb5bd\",\n  },\n  playerOne: {\n    color: props => getStatusColor(props.playerOne),\n  },\n  playerTwo: {\n    color: props => getStatusColor(props.playerTwo),\n  }\n};\n\nconst getStatusColor = player => {\n  switch (player.gameStatus) {\n    case GAME_STATUSES.TIED:\n      return \"#ffd43b\";\n    case GAME_STATUSES.LOSING:\n      return \"#e03131\";\n    case GAME_STATUSES.WINNING:\n    default:\n      return \"#37b24d\";\n  }\n};\n\nconst mapStateToProps = ({ game }) => {\n  const playerOne = { ...game[PLAYER_ONE] };\n  const playerTwo = { ...game[PLAYER_TWO] };\n  playerOne.gameStatus = getGameStatus(game, PLAYER_ONE);\n  playerOne.isPlaying = game.turn.player === PLAYER_ONE;\n  playerTwo.gameStatus = getGameStatus(game, PLAYER_TWO);\n\n  return {\n    playerOne,\n    playerTwo,\n  };\n};\n\nexport const getGameStatus = (game, player) => {\n  const thisPlayerScore = game[player].score;\n  const opponentScore = game[SWITCH_PLAYER[player]].score;\n\n  if (thisPlayerScore < opponentScore) {\n    return GAME_STATUSES.WINNING;\n  }\n\n  if (thisPlayerScore > opponentScore) {\n    return GAME_STATUSES.LOSING;\n  }\n\n  return GAME_STATUSES.TIED;\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scoreboard));","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from \"react-redux\";\n\nimport Game from './Game';\nimport Instructions from './Instructions';\nimport Scoreboard from \"./Scoreboard\";\n\nimport { startNewGame } from \"../redux/actions/deck\";\n\nexport const Main = ({ dispatch, classes, deckId }) => {\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  return (\n    <React.Fragment>\n      <div className={classes.header}>\n        <button className={classes.instructions} onClick={() => setShowInstructions(true)}>INSTRUCTIONS</button>\n        <button className={classes.newGame} onClick={() => dispatch(startNewGame(deckId))}>NEW GAME</button>\n        <Scoreboard />\n      </div>\n      {showInstructions && <Instructions setShowInstructions={setShowInstructions} />}\n      <Game />\n    </React.Fragment>\n  );\n};\n\nconst sharedButtonStyles = {\n  boxShadow: \"unset\",\n  border: \"none\",\n  borderRadius: \"3px\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  padding: \"10px\",\n  cursor: \"pointer\",\n};\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"10px\",\n  },\n  instructions: {\n    ...sharedButtonStyles,\n    backgroundColor: \"#ffe8cc\",\n  },\n  newGame: {\n    ...sharedButtonStyles,\n    backgroundColor: \"#e3fafc\",\n  },\n};\n\nconst mapStateToProps = state => ({\n  deckId: state.deck.deckId,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Main));","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { getNewDeck } from './redux/actions/deck';\n\nimport Main from './components/Main';\n\nstore.dispatch(getNewDeck());\nwindow.store = store;\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Main dispatch={store.dispatch} />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}